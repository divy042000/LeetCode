/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
      int getheight(TreeNode* root,int &diameter)
      {
          if(root==NULL){return 0;}
          int leftsubtree=getheight(root->left,diameter);
          int rightsubtree=getheight(root->right,diameter);
          diameter=max(diameter,leftsubtree+rightsubtree);
          return max(leftsubtree,rightsubtree)+1;
      }
    int diameterOfBinaryTree(TreeNode* root) {
        int diameter=0;
        getheight(root,diameter);
        return diameter;
    }
};
